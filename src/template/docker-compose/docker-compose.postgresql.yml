version: '3.9'
name: microservicetemplate
services:
  dotnet-webapi:
    image: genocs/dotnet-webapi:latest
    container_name: dotnet-webapi
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+:5100;http://+:5010
      - ASPNETCORE_HTTPS_PORT=5100
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/cert.pfx
      - DatabaseSettings__ConnectionString=Server=postgres;Port=5433;Database=genocs_db;User Id=posgresqladmin;Password=posgresqladmin
      - HangfireSettings__Storage__ConnectionString=Server=postgres;Port=5433;Database=genocs_db;User Id=posgresqladmin;Password=posgresqladmin
      - DatabaseSettings__DBProvider=postgresql
      - HangfireSettings__Storage__StorageProvider=postgresql
    ports:
      - 5100:5100
      - 5010:5010
    networks:
      - genocs
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - postgres
    restart: on-failure

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=posgresqladmin
      - POSTGRES_PASSWORD=posgresqladmin
      - PGPORT=5433
    ports:
      - 5433:5433
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5

    networks:
      - genocs
    # network_mode: host
    volumes:
      - postgres:/var/lib/postgresql/data
  # elk:
  #     container_name:  elasticsearch-kibana
  #     image: sebp/elk:oss-8.5.3
  #     environment:
  #       - LOGSTASH_START=0
  #     volumes:
  #       - sebp-elk-data:/usr/share/elk/data
  #     ports:
  #       - 5601:5601
  #       - 9200:9200
  #     networks:
  #       - genocs


networks:
  genocs:
    name: genocs-network
    driver: bridge

  postgres:
    driver: local
